import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.SortedSet;
import java.util.TreeSet;

public class EmpCaseStudy {
	Map<Integer, String> empMap;

	public Map<Integer, String> getEmpMap() {
		return empMap;
	}

	EmpCaseStudy() {
		BufferedReader br = null;

		try {

			String sCurrentLine;

			br = new BufferedReader(new FileReader("emp.txt"));
			empMap = new HashMap<Integer, String>();

			while ((sCurrentLine = br.readLine()) != null) {
				System.out.println(sCurrentLine);
				String[] line = sCurrentLine.split("\\s");
				if (line.length > 1) {
					empMap.put(Integer.parseInt(line[1]), line[0]);
				}
			}
			System.out.println("Size of Map : " + empMap.size());

			SortedSet<Integer> keys = new TreeSet<Integer>(empMap.keySet());
			for (Integer key : keys) {
				System.out.println("Key : " + key.toString() + "Value : " + empMap.get(key).toString());
			}

		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				if (br != null)
					br.close();
			} catch (IOException ex) {
				ex.printStackTrace();
			}
		}
	}

	String search(Map<Integer, String> empMap, Integer eno) {
		return empMap.get(eno);
	}

	public static void main(String[] args) {
		EmpCaseStudy emp = new EmpCaseStudy();
		System.out.println("Search Ename : " + emp.search(emp.getEmpMap(), 53));
	}

}
